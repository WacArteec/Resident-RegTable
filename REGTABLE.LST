Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 1
regtable.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     org 100h
      4
      5				     PUSH_ALL_REGS   macro
      6
      7					     push    ss	es ds sp bp di si dx cx	bx ax
      8
      9				     endm
     10
     11				     POP_ALL_REGS    macro
     12
     13					     pop     ax	bx cx dx si di bp sp ds	es ss
     14
     15				     endm
     16
     17	      =0020		     INT08H	 equ 4*08h  ; timer interrupt number
     18	      =0024		     INT09H	 equ 4*09h  ; keyboard interrupt number
     19
     20	      =002A		     START_KEY	 equ 2ah    ; scancode 'Shift(L)'
     21	      =0036		     STOP_KEY	 equ 36h    ; scancode 'Shift(R)'
     22
     23	      =0004		     RED	 equ 04h    ; red color	code
     24
     25	      =0007		     TWIDTH	 equ 07h    ; reg table	width
     26	      =0010		     THEIGTH	 equ 10h    ; reg table	heigth
     27
     28	      =0050		     SCREENWIDTH equ 0050h  ; width of screen in DOS
     29	      =0019		     SCRENHEIGTH equ 0019h  ; heigth of	screen in DOS
     30
     31	      =B800		     VIDEOSEG	 equ 0b800h ; addr of video segment
     32
     33	0100			     main:
     34
     35	0100  E8 0013			 call ChangeInt09h
     36	0103  E8 0032			 call ChangeInt08h
     37
     38	0106  BA 0039r			 mov dx, offset	EOP
     39	0109  D1 EA D1 EA D1 EA	D1+	 shr dx, 4
     40	      EA
     41	0111  42			 inc dx
     42
     43	0112  B4 31		     mov ah, 31h
     44	0114  CD 21		     int 21h
     45
     46				     ;==========ChangeInt09h===============
     47				     ;Entry:
     48				     ;Exit:
     49				     ;ASsumes:
     50				     ;Destroy:
     51				     ;========================================
     52	0116			     ChangeInt09h proc
     53
     54	0116  B8 3509			 mov ax, 3509h
     55	0119  CD 21			 int 21h
     56
     57	011B  89 1E 0186r		 mov OldOffset09h, bx
Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 2
regtable.asm



     58	011F  8C 06 0188r		 mov OldSeg09h,	es
     59
     60	0123  33 C0			 xor ax, ax
     61	0125  8E C0			 mov es, ax
     62
     63	0127  BB 0024			 mov bx, INT09H
     64
     65	012A  FA			     cli
     66	012B  0E				 push cs
     67	012C  58				 pop ax
     68
     69	012D  26: C7 07	015Ar			 mov es:[bx], offset NewInt09h
     70
     71	0132  26: 89 47	02			 mov es:[bx+2],	ax
     72	0136  FB			     sti
     73
     74	0137  C3		     ret
     75	0138			     endp
     76
     77				     ;==========ChangeInt08h=================
     78				     ;Descr: Change timer interruption to my func that update RegTable
     79				     ;Entry:
     80				     ;Exit:
     81				     ;ASsumes:
     82				     ;Destroy:
     83				     ;========================================
     84	0138			     ChangeInt08h proc
     85
     86	0138  B8 3508			 mov ax, 3508h
     87	013B  CD 21			 int 21h
     88
     89	013D  89 1E 01ABr		 mov OldOffset08h, bx
     90	0141  8C 06 01ADr		 mov OldSeg08h,	es
     91
     92	0145  33 C0			 xor ax, ax
     93	0147  8E C0			 mov es, ax
     94
     95	0149  BB 0020			 mov bx, INT08H
     96
     97	014C  FA			     cli
     98	014D  0E				 push cs
     99	014E  58				 pop ax
    100
    101	014F  26: C7 07	018Ar			 mov es:[bx], offset NewInt08h
    102
    103	0154  26: 89 47	02			 mov es:[bx+2],	ax
    104	0158  FB			     sti
    105
    106	0159  C3		     ret
    107	015A			     endp
    108
    109				     ;==========NewInt09h====================
    110				     ;Entry:
    111				     ;Exit:
    112				     ;ASsumes:
    113				     ;Destroy:
    114				     ;========================================
Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 3
regtable.asm



    115	015A			     NewInt09h	 proc
    116
    117	015A  50			     push ax
    118
    119	015B  E4 60			     in	al, 60h
    120	015D  3C 2A			     cmp al, START_KEY
    121	015F  75 09			     jne dont_start_res		  ;; jne dont_...
    122
    123	0161  C6 06 0038r 01 90		     mov can_draw, 1
    124
    125	0167  EB 0B 90			     jmp back_keyboard_control
    126
    127	016A				 dont_start_res:
    128
    129	016A  3C 36			     cmp al, STOP_KEY
    130	016C  75 16			     jne dont_stop_res
    131
    132	016E  C6 06 0038r 00 90		     mov can_draw, 0
    133
    134	0174				 back_keyboard_control:
    135
    136	0174  E4 61			     in	al, 61h
    137	0176  0C 80			     or	al, 80h
    138	0178  E6 61			     out 61h, al
    139	017A  24 7F			     and al, not 80h
    140	017C  E6 61			     out 61h, al
    141	017E  B0 20			     mov al, 20h
    142	0180  E6 20			     out 20h, al
    143
    144	0182  58			     pop ax
    145
    146	0183  CF		     iret
    147
    148	0184				 dont_stop_res:
    149
    150	0184  58			     pop ax
    151
    152	0185  EA			     db	0EAh
    153	0186  0000			     OldOffset09h    dw	0
    154	0188  0000			     OldSeg09h	     dw	0
    155
    156	018A			     endp
    157
    158
    159				     ;==========NewInt08h====================
    160				     ;Entry:
    161				     ;Exit:
    162				     ;ASsumes:
    163				     ;Destroy:
    164				     ;========================================
    165	018A			     NewInt08h	 proc
    166
    167	018A  80 3E 0038r 01			     cmp can_draw, 1
    168	018F  75 19				     jne dont_draw_regs
    169
    170						     PUSH_ALL_REGS							     ; push +
    171				     all registers
Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 4
regtable.asm



1   172
1   173	0191  16 06 1E 54 55 57	56+	     push    ss	es ds sp bp di si dx cx	bx ax
    174	      52 51 53 50
1   175
    176
    177	019C  E8 0010				     Call DrawRegs
    178
    179						     POP_ALL_REGS							     ; pop  +
    180				     all registers
1   181
1   182	019F  58 5B 59 5A 5E 5F	5D+	     pop     ax	bx cx dx si di bp sp ds	es ss
    183	      5C 1F 07 17
1   184
    185
    186	01AA				     dont_draw_regs:
    187
    188	01AA  EA			 db 0EAh
    189	01AB  0000			 OldOffset08h	     dw	0
    190	01AD  0000			 OldSeg08h	 dw 0
    191
    192	01AF			     endp
    193
    194				     ;==========DrawRegs==================== draw values of registers
    195				     ;Entry:
    196				     ;Exit:
    197				     ;ASsumes:
    198				     ;Destroy:
    199				     ;========================================
    200	01AF			     DrawRegs	proc
    201
    202	01AF  B8 B800			 mov ax, VIDEOSEG
    203	01B2  8E C0			 mov es, ax
    204
    205	01B4  33 C0			 xor ax, ax
    206	01B6  BE 0000r			 lea si, clearing
    207
    208	01B9  BF 0500			 mov di, 500h
    209	01BC  AC			 lodsb
    210	01BD  B9 0100			 mov cx, 100h ;SCREENWIDTH * SCRENHEIGTH = whole screen	;0fa0h
    211	01C0  F3> AB			 rep stosw
    212
    213	01C2  33 FF			 xor di, di
    214	01C4  B4 04			 mov ah, RED
    215	01C6  BE 0011r			 lea si, register_names
    216
    217	01C9  B9 000C			 mov cx, 0ch ; 12d registers
    218
    219	01CC  54			 push sp
    220	01CD  5D			 pop bp
    221
    222	01CE				 Draw_Regs:
    223
    224	01CE  51			     push cx
    225
    226	01CF  B9 0003			     mov cx, 3
    227
    228	01D2				     Draw_Reg_Name:
Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 5
regtable.asm



    229
    230	01D2  AC				 lodsb
    231	01D3  AB				 stosw
    232
    233	01D4  E2 FC			     loop Draw_Reg_Name
    234
    235	01D6  83 C5 02			     add bp, 2
    236
    237	01D9  8B 56 00			     mov dx, [bp]
    238
    239	01DC  E8 0008			     call DrawValues
    240
    241	01DF  81 C7 0092		     add di, (SCREENWIDTH - 7) * 2
    242
    243	01E3  59			     pop cx
    244
    245	01E4  E2 E8			 loop Draw_Regs
    246
    247
    248	01E6  C3		     ret
    249	01E7			     endp
    250
    251				     ;==========DrawValues==================== draw values of registers
    252				     ;Entry:
    253				     ;Exit:
    254				     ;ASsumes:
    255				     ;Destroy:
    256				     ;========================================
    257	01E7			     DrawValues	  proc
    258
    259	01E7  56			 push si
    260
    261	01E8  BB B800			 mov bx, VIDEOSEG
    262	01EB  8E C3			 mov es, bx
    263
    264	01ED  33 DB			 xor bx, bx
    265
    266	01EF  BE 0001r			     lea si, Hex_Nums
    267
    268	01F2  8A DA			     mov bl, dl
    269	01F4  80 E3 0F			     and bl, 0fh
    270
    271	01F7  03 F3			     add si, bx
    272
    273	01F9  AC			     lodsb
    274	01FA  AB			     stosw
    275
    276
    277	01FB  BE 0001r			     lea si, Hex_Nums
    278
    279	01FE  8A DA			     mov bl, dl
    280	0200  D0 EB D0 EB D0 EB	D0+	     shr bl, 4
    281	      EB
    282	0208  80 E3 0F			     and bl, 0fh
    283
    284	020B  03 F3			     add si, bx
    285
Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 6
regtable.asm



    286	020D  AC			     lodsb
    287	020E  AB			     stosw
    288
    289
    290	020F  BE 0001r			     lea si, Hex_Nums
    291
    292	0212  8A DE			     mov bl, dh
    293	0214  80 E3 0F			     and bl, 0fh
    294
    295	0217  03 F3			     add si, bx
    296
    297	0219  AC			     lodsb
    298	021A  AB			     stosw
    299
    300
    301	021B  BE 0001r			     lea si, Hex_Nums
    302
    303	021E  8A DE			     mov bl, dh
    304	0220  D0 EB D0 EB D0 EB	D0+	     shr bl, 4
    305	      EB
    306	0228  80 E3 0F			     and bl, 0fh
    307
    308	022B  03 F3			     add si, bx
    309
    310	022D  AC			     lodsb
    311	022E  AB			     stosw
    312
    313	022F  5E			 pop si
    314
    315	0230  C3		     ret
    316	0231			     endp
    317
    318	0231			     .data
    319
    320	0000  20		     clearing	     db	' ' ; надо будет убрать вместе с очисткой	    +
    321				     экрана
    322
    323	0001  30 31 32 33 34 35	36+  Hex_Nums	     db	'0123456789ABCDEF'
    324	      37 38 39 41 42 43	44+
    325	      45 46
    326	0011  61 78 3D 62 78 3D	63+  register_names  db	'ax=bx=cx=dx=si=di=bp=sp=ds=es=ss=cs='
    327	      78 3D 64 78 3D 73	69+
    328	      3D 64 69 3D 62 70	3D+
    329	      73 70 3D 64 73 3D	65+
    330	      73 3D 73 73 3D 63	73+
    331	      3D
    332
    333	0035  00		     reg_value	 db 0
    334	0036  000F		     draw_mask	 dw 0fh
    335
    336	0038  00		     can_draw	 db 0
    337
    338	0039			     EOP:
    339				     end main
Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 7
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/26/25"
??FILENAME			  Text	 "regtable"
??TIME				  Text	 "02:21:21"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _DATA
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 REGTABLE
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
BACK_KEYBOARD_CONTROL		  Near	 DGROUP:0174
CAN_DRAW			  Byte	 DGROUP:0038
CHANGEINT08H			  Near	 DGROUP:0138
CHANGEINT09H			  Near	 DGROUP:0116
CLEARING			  Byte	 DGROUP:0000
DONT_DRAW_REGS			  Near	 DGROUP:01AA
DONT_START_RES			  Near	 DGROUP:016A
DONT_STOP_RES			  Near	 DGROUP:0184
DRAWREGS			  Near	 DGROUP:01AF
DRAWVALUES			  Near	 DGROUP:01E7
DRAW_MASK			  Word	 DGROUP:0036
DRAW_REGS			  Near	 DGROUP:01CE
DRAW_REG_NAME			  Near	 DGROUP:01D2
EOP				  Near	 DGROUP:0039
HEX_NUMS			  Byte	 DGROUP:0001
INT08H				  Number 0020
INT09H				  Number 0024
MAIN				  Near	 DGROUP:0100
NEWINT08H			  Near	 DGROUP:018A
NEWINT09H			  Near	 DGROUP:015A
OLDOFFSET08H			  Word	 DGROUP:01AB
OLDOFFSET09H			  Word	 DGROUP:0186
OLDSEG08H			  Word	 DGROUP:01AD
OLDSEG09H			  Word	 DGROUP:0188
RED				  Number 0004
REGISTER_NAMES			  Byte	 DGROUP:0011
REG_VALUE			  Byte	 DGROUP:0035
SCREENWIDTH			  Number 0050
SCRENHEIGTH			  Number 0019
START_KEY			  Number 002A
STOP_KEY			  Number 0036
THEIGTH				  Number 0010
TWIDTH				  Number 0007
VIDEOSEG			  Number B800
Turbo Assembler	 Version 4.1	    02/26/25 02:21:21	    Page 8
Symbol Table




Macro Name

POP_ALL_REGS
PUSH_ALL_REGS

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0039 Word	  Public  DATA
  _TEXT				  16  0231 Word	  Public  CODE
